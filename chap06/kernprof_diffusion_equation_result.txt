% kernprof -lv diffusion_equation.py     
Wrote profile results to diffusion_equation.py.lprof
Timer unit: 1e-06 s

Total time: 308.812 s
File: diffusion_equation.py
Function: evolve at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def evolve(grid, dt, D=1.0):
     9       500        448.0      0.9      0.0      xmax, ymax = grid_shape
    10       500      88843.0    177.7      0.0      new_grid = [[0.0] * ymax for x in range(xmax)]
    11    320500      84346.0      0.3      0.0      for i in range(xmax):
    12 205120000   49943919.0      0.2     16.2          for j in range(ymax):
    13 204800000   94301209.0      0.5     30.5              grid_xx = (grid[(i + 1) % xmax][j] + grid[(i - 1) % xmax][j] - 2.0 * grid[i][j])
    14 204800000   91668855.0      0.4     29.7              grid_yy = (grid[i][(j + 1) % ymax] + grid[i][(j - 1) % ymax] - 2.0 * grid[i][j])
    15 204800000   72723787.0      0.4     23.5              new_grid[i][j] = grid[i][j] + D * (grid_xx + grid_yy) * dt
    16       500        678.0      1.4      0.0      return new_grid

% kernprof -lv diffusion_equation_fast.py
Wrote profile results to diffusion_equation_fast.py.lprof
Timer unit: 1e-06 s

Total time: 260.657 s
File: diffusion_equation_fast.py
Function: evolve at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def evolve(grid, dt, out, D=1.0):
     9       500        214.0      0.4      0.0      xmax, ymax = grid_shape
    10    320500      66410.0      0.2      0.0      for i in range(xmax):
    11 205120000   38246047.0      0.2     14.7          for j in range(ymax):
    12 204800000   81718126.0      0.4     31.4              grid_xx = (grid[(i + 1) % xmax][j] + grid[(i - 1) % xmax][j] - 2.0 * grid[i][j])
    13 204800000   79469977.0      0.4     30.5              grid_yy = (grid[i][(j + 1) % ymax] + grid[i][(j - 1) % ymax] - 2.0 * grid[i][j])
    14 204800000   61155780.0      0.3     23.5              out[i][j] = grid[i][j] + D * (grid_xx + grid_yy) * dt